workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "cx-dev"'
      variables:
        TAG: $CI_COMMIT_SHORT_SHA
    - if: '$CI_COMMIT_TAG =~ /^RC-.*/ || $CI_COMMIT_TAG =~ /^v.*/'
      variables:
        TAG: $CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"'
      variables:
        TAG:  $CI_COMMIT_SHORT_SHA

variables:
  publish_workspaces: "components dashboards panels-plugin plugin-system prometheus-plugin core"

stages:
  - lint_tests
  - build_npm
  - build
  - deploy

front_lint:
  stage: lint_tests
  tags:
    - docker
  image: hbr-1.int.ops.cldx.ru/cx-os/nodejs:21.6.1
  script:
    - cd ./ui
    - npm ci
    - npm run lint  
  allow_failure: true
  interruptible: true

front_tests:
  stage: lint_tests
  tags:
    - docker
  image: hbr-1.int.ops.cldx.ru/cx-os/nodejs:21.6.1
  script:
    - cd ./ui
    - npm ci
    - npm run test
  allow_failure: true  
  interruptible: true

.sonar:
  tags:
    - shell
  stage: lint_tests    
  script:
    - cd ui/  
    - >-
      sonar-scanner
      -Dsonar.projectKey=${CI_PROJECT_PATH_SLUG}
      -Dsonar.projectName=${CI_PROJECT_NAME}
      -Dsonar.links.homepage=${CI_PROJECT_URL}
      -Dsonar.links.ci=${CI_PROJECT_URL}/-/pipelines
      -Dsonar.scm.provider=git
      -Dsonar.qualitygate.wait=true
      -Dsonar.coverage.exclusions="src/test/**,src/generated/**"  
  allow_failure: true  

check_version:
  stage: build_npm
  tags:
  - docker
  image:  hbr-1.int.ops.cldx.ru/cx-os/nodejs:21.6.1 
  script:
    - cd ui
    # - ../scripts/cx_ui_release.sh --check-version $CI_COMMIT_TAG $publish_workspaces
    - ../scripts/cx_ui_release.sh --check-version $CI_COMMIT_TAG $publish_workspaces
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/ 
    - when: never

build_npm:
  stage: build_npm
  tags:
    - docker
  image:  hbr-1.int.ops.cldx.ru/cx-os/nodejs:21.6.1
  script:
    - |
      cd ui/
      npm ci 
      npm run build
  artifacts:
    paths:
      - ui/**/dist
    exclude:
      - ui/node_modules
      - ui/storybook
    when: on_success
    expire_in: "1 day"
  needs:
    - check_version    
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/ 
    - when: never



publish_npm:
  stage: build_npm
  tags:
    - docker
  image:  hbr-1.int.ops.cldx.ru/cx-os/nodejs:21.6.1
  script:
    - npm set registry=https://${NPM_REGISTRY}/
    - npm config set -- "//${NPM_REGISTRY}/:_authToken" "${NPM_TOKEN}"
    - cd ui/
    - |
       for workspace in ${publish_workspaces}
        do 
          cd "${workspace}"
          npm publish --strict-ssl=false
          cd ../
        done
  needs:
    - build_npm
  rules:
    - if: $CI_COMMIT_TAG =~ /^v.*/ 
    - when: never

build_server:
  tags:
    - shell
  stage:  build
  script:  
    - |
      export VERS=$(cat "./ui/.nvmrc")
      docker login $HARBOR_REGISTRY -u $HARBOR_REGISTRY_USERNAME -p $HARBOR_REGISTRY_PASSWORD 2>/dev/null
      docker build -f Dockerfile-cx -t $HARBOR_REGISTRY/cx-mon/observ-ui-perses:$TAG --build-arg NODE_VERS=${VERS:1} .
      docker tag $HARBOR_REGISTRY/cx-mon/observ-ui-perses:$TAG $HARBOR_REGISTRY/cx-mon/observ-ui-perses:latest
      docker push -a $HARBOR_REGISTRY/cx-mon/observ-ui-perses
  rules:
    - if: '$CI_COMMIT_TAG =~ /^RC-.*/ || $CI_COMMIT_TAG =~ /^v.*/ || $CI_COMMIT_BRANCH == "cx-dev"'
    - when: never

build_cli:
  tags:
    - shell
  stage:  build
  script:
    - |  
      docker login $HARBOR_REGISTRY -u $HARBOR_REGISTRY_USERNAME -p $HARBOR_REGISTRY_PASSWORD 2>/dev/null
      docker build -f Dockerfile-cx-cli -t $HARBOR_REGISTRY/cx-mon/percli:$TAG .
      docker tag $HARBOR_REGISTRY/cx-mon/percli:$TAG $HARBOR_REGISTRY/cx-mon/percli:latest
      docker push -a $HARBOR_REGISTRY/cx-mon/percli
  rules:
    - if: '$CI_COMMIT_TAG =~ /^RC-.*/ || $CI_COMMIT_TAG =~ /^v.*/ || $CI_COMMIT_BRANCH == "cx-dev"'
    - when: never

deploy:
  stage: deploy
  tags:
    - shell
  variables:
    repo_url: "https://git-1.int.ops.cldx.ru/api/v4/projects"
    project_id: "614"
  script:
    - 'curl --fail --request POST -F token="$TRIGGER_TOKEN" -F variables["IS_PERSES_REPO"]=true  -F variables["TRIGGER_PROJECT_NAME"]="$CI_PROJECT_PATH" -F variables["MR_NAME"]="$PIPE_NAME" -F ref=dev ${repo_url}/${project_id}/trigger/pipeline'
  rules:
    - if: '($CI_COMMIT_REF_NAME == "cx-dev" && $CI_PIPELINE_SOURCE == "push") || ($CI_COMMIT_TAG =~ /^RC-.*/ || $CI_COMMIT_TAG =~ /^v.*/)'
      when: always
    - when: never
